server.port= 8082
#debit.service.uri=http://localhost:8084/debit/a
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=customer-service

spring.zipkin.enabled=true

#logging.file=E:/elk/spring-boot-elk.log

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


resilience4j.circuitbreaker.instances.customerService.registerHealthIndicator: true
resilience4j.circuitbreaker.instances.customerService.eventConsumerBufferSize: 10
resilience4j.circuitbreaker.instances.customerService.failureRateThreshold: 50
resilience4j.circuitbreaker.instances.customerService.minimumNumberOfCalls: 5
resilience4j.circuitbreaker.instances.customerService.automaticTransitionFromOpenToHalfOpenEnabled: true
resilience4j.circuitbreaker.instances.customerService.waitDurationInOpenState: 5s
resilience4j.circuitbreaker.instances.customerService.permittedNumberOfCallsInHalfOpenState: 3
resilience4j.circuitbreaker.instances.customerService.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.customerService.slidingWindowType: COUNT_BASED
resilience4j.circuitbreaker.instances.customerService.recordExceptions=org.springframework.web.client.HttpServerErrorException, java.util.concurrent.TimeoutException, java.io.IOException,org.springframework.web.client.ResourceAccessException,java.net.ConnectException,java.util.concurrent.CompletionException

#resilience4j.retry.instances.debitMenthodA.registerHealthIndicator: true
resilience4j.retry.instances.debitMenthodA.maxRetryAttempts: 3
resilience4j.retry.instances.debitMenthodA.waitDuration: 10s

resilience4j.ratelimiter.instances.debitMenthodB.registerHealthIndicator: false
resilience4j.ratelimiter.instances.debitMenthodB.limitForPeriod: 10
resilience4j.ratelimiter.instances.debitMenthodB.limitRefreshPeriod: 10s
resilience4j.ratelimiter.instances.debitMenthodB.timeoutDuration: 3s


#resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
#resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
#resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=3
#resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
#resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
#resilience4j.circuitbreaker.configs.default.recordExceptions=org.springframework.web.client.HttpServerErrorException, java.util.concurrent.TimeoutException, java.io.IOException,org.springframework.web.client.ResourceAccessException,java.net.ConnectException,java.util.concurrent.CompletionException
#resilience4j.circuitbreaker.configs.shared.slidingWindowSize=100
#resilience4j.circuitbreaker.configs.shared.permittedNumberOfCallsInHalfOpenState=30
#resilience4j.circuitbreaker.configs.shared.waitDurationInOpenState=1s
#resilience4j.circuitbreaker.configs.shared.failureRateThreshold=50
#resilience4j.circuitbreaker.configs.shared.eventConsumerBufferSize=10
#resilience4j.circuitbreaker.instances.customer.baseConfig=default

# Required connection configs for Kafka producer, consumer, and admin
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.bootstrap.servers=pkc-l7pr2.ap-south-1.aws.confluent.cloud:9092
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='ET473WC2GUHY7X6S' password='jT089mlaOWZ8A+wdtRRLOYbeavMzXpc0czxdvT7sZs7siMGLC+oRxeDskZBfUH0h';
#spring.kafka.properties.security.protocol=SASL_SSL

#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer 

#spring.kafka.producer.client-id=spring-boot-producer-1

#spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer


# Required connection configs for Confluent Cloud Schema Registry
#spring.kafka.template.default-topic=accInfo
#spring.kafka.properties.basic.auth.credentials.source=USER_INFO
#spring.kafka.properties.basic.auth.user.info=TOMM2PHA7IL6HZPK:1tkdC/egAxthaedLpHa8lQxoeW14WK1xy7oTNgK3tuy65Rs0aLTDJCaHTMmzgc83
#spring.kafka.properties.schema.registry.url=https://psrc-10wgj.ap-southeast-2.aws.confluent.cloud

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=pkc-ldvj1.ap-southeast-2.aws.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='DFZ2RIPXRHHQZ4GR' password='yBL0px5cGmJL7egHQGKmnfHksoWBXKSyU4GHUmTvxBQPdVrtAqTVZdgNFHPFtw7y';
spring.kafka.properties.security.protocol=SASL_SSL

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer 

spring.kafka.producer.client-id=spring-boot-producer-1

spring.kafka.consumer.group-id=spring-boot-consumer-id
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.auto-offset-reset=earliest


# Required connection configs for Confluent Cloud Schema Registry
spring.kafka.template.default-topic=accInfo
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=F6XMZN5YT4OKT7IJ:CR7zEWl9hCPdW6VJu7L1r1QKdMJJqTxs7PHPI81rFIJS9nGWGwiDx+jNHS13E7hl
spring.kafka.properties.schema.registry.url=https://psrc-znpo0.ap-southeast-2.aws.confluent.cloud

